name: Deploy Celery on Windows

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: self-hosted
    name: Deploy Celery on Windows using NSSM

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Copy code to target directory
        shell: pwsh
        run: |
          $Target = "C:\celery"
          if (!(Test-Path $Target)) {
            New-Item -ItemType Directory -Path $Target | Out-Null
          }
          robocopy $PWD $Target /MIR
          $exitCode = $LASTEXITCODE
          if ($exitCode -gt 7) {
            Write-Error "Robocopy failed with exit code $exitCode"
            exit $exitCode
          } else {
            Write-Output "Robocopy completed successfully with exit code $exitCode"
            exit 0
          }
      
      - name: Stop existing Celery service (if exists)
        shell: cmd
        continue-on-error: true
        run: |
          nssm stop CeleryWorker
          nssm stop CeleryFlower
          timeout 5
          nssm remove CeleryWorker confirm
          nssm remove CeleryFlower confirm

      - name: Set up Python virtual environment
        shell: pwsh
        run: |
          $env:VENV_DIR = "C:\celery\venv"
          python -m venv $env:VENV_DIR
          & "$env:VENV_DIR\\Scripts\\pip.exe" install --upgrade pip
          & "$env:VENV_DIR\\Scripts\\pip.exe" install -r requirements.txt

      - name: Install Celery as Windows Service using NSSM
        shell: cmd
        run: |
          set VENV_DIR=C:\celery\venv
          mkdir C:\celery\logs
          nssm install CeleryWorker "%VENV_DIR%\Scripts\python.exe" " -m celery -A celery_app worker --loglevel=info
          nssm set CeleryWorker AppDirectory "C:\celery"
          nssm set CeleryWorker Start SERVICE_AUTO_START
          nssm set CeleryWorker AppStdout "C:\celery\logs\celery_stdout.log"
          nssm set CeleryWorker AppStderr "C:\celery\logs\celery_stderr.log"
          nssm start CeleryWorker

      - name: Install Flower as Windows Service using NSSM
        shell: cmd
        run: |
          set VENV_DIR=C:\celery\venv
          mkdir C:\celery\logs
          nssm install CeleryFlower "%VENV_DIR%\Scripts\python.exe" " -m celery -A celery_app flower
          nssm set CeleryFlower AppDirectory "C:\celery"
          nssm set CeleryFlower Start SERVICE_AUTO_START
          nssm set CeleryFlower AppStdout "C:\celery\logs\celery_flower_stdout.log"
          nssm set CeleryFlower AppStderr "C:\celery\logs\celery_flower_stderr.log"
          nssm start CeleryFlower